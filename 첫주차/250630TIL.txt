1일차 빗물받는 르탄이 진행
예전에 콜로소에서 했던 똥피하기와는 약간 다른 듯 비슷한 느낌의 진행.
무료에셋을 사용하면 조금 더 괜찮은 퀄리티를 낼 수 있을 것 같다.
사각형, 삼각형만을 사용하기 때문에 전체적으로 퀄리티는 90년대 게임같은 느낌이 나지만
전체적인 기초플밍을 배우는 것에는 문제 없었음.

ublic class Rtan : MonoBehaviour
보통 이런 제목 밑에 퍼블릭값이나 기본값을 지정해두고 시작함.

 void Start()
 시작하자마자 입력되는 애들이 들어가는 곳.
 void Update()
 게임을 지속하면서도 계속 나오는 애들을 넣는 곳.

 예전에 배웠던 영상에서는 디버깅을 계속 시켜서 되는지 안되는지 위주로 코딩 공부를 시켰다면
 여기서는 직접해보는 방식으로 코딩을 가르침.
 나는 후자쪽이 나에게 맞다 생각되어 만족하는 중.
 다만 조금 더 응용하고 해볼 필요성이 있음.
 이는 숙제를 이용하여 조금씩 상기시킬 수 있을 것 같다.

매번 깃허브로 깐다는게 그냥 깔아서 안드로이드 안깔려서 다시까는걸 몇번째하는지 모르겠다.*****

private void OnCollisionEnter2D(Collision2D collision)
    {
        if (collision.gameObject.CompareTag("Ground"))
        {
            Destroy(this.gameObject);
        }

        if (collision.gameObject.CompareTag("Player"))
        {
            {
                GameManager.instance.AddScore(score);
                Destroy(this.gameObject);
            }
        }
    }

    충돌값을 처리하는 방식. 앞에거는 뭘 잘못했는지 잘 모르겠는데 안되다가 태그로 걸어서 하니 잘 된다.
    다음 영상에 태그말고 쉬운방법이있으면 좋고 없으면 우선은 이렇게 사용해야할 것 같다.
    반투명화해서 없애는 법도 알고싶다 이번 1~4주차강의 빨리끝내면 궁금한 것들 적어놨다가 다 적용시켜보는 쪽으로 진행할 예정

 transform.localScale = new Vector3(size, size, 0);
 다른 애들은 x,y값 다 왜 그렇게 잡는지 이해했는데 
 왜 얘는 벡터3를 넣는지 모르겠다.
 이것도 나중에 이유를 물어보던지 검색을 해볼 예정*

  SpriteRenderer renderer;
  스프라이트 이미지에 무엇인가 걸때 사용함.
  스프라이트렌더러 주로 사이즈 색상 등을 지정할때 쓰는데

  큰건 무게 가중치 넣어주면 게임이 조금 더 재밌어 질 것 같음.
  다양함을 넣어주는 편이 좋을 듯 함.

  방향전환을 마우스로만 할 수 있게 해놨는데 키보드 유저도 많기 때문에 키보드 방향전환도 넣으면 더 좋을 것 같음.
  이 또한 시간이 남는대로 따로 넣어서 구현해 볼 예정.

  총 평 = 구현은 시키는대로 하여 다 진행했으나 내가 이 것을 다 알아서 코딩한 것이 아님을 알고 계속 공부하고
        이해가 안가는 것은 계속 체크, 더 좋은 방향으로 바꾸는 것, 응용하는 것 등도 계속 체크해둘 것.